//
//  FriendsPresenter.swift
//  vkExtended
//
//  Created Ярослав Стрельников on 26.10.2020.
//  Copyright © 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class FriendsPresenter: FriendsPresenterProtocol {

    weak private var view: FriendsViewProtocol?
    var interactor: FriendsInteractorProtocol?
    private let router: FriendsWireframeProtocol

    init(interface: FriendsViewProtocol, interactor: FriendsInteractorProtocol?, router: FriendsWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func start(request: FriendModel.Request.RequestType) {
        interactor?.start(request: request)
    }
    
    func presentData(response: FriendModel.Response.ResponseType) {
        switch response {
        case .presentFriend(response: let response):
            let cells = response.items?.compactMap { (item) in
                friendCellViewModel(from: item)
            }
            
            let friendViewModel = FriendViewModel.init(cell: cells ?? [], footerTitle: "")
            DispatchQueue.main.async {
                self.view?.displayData(viewModel: .displayFriend(friendViewModel: friendViewModel))
            }
        case .presentFooterLoader:
            DispatchQueue.main.async {
                self.view?.displayData(viewModel: .displayFooterLoader)
            }
        case .presentFooterError(message: let messageError):
            DispatchQueue.main.async {
                self.view?.displayData(viewModel: .displayFooterError(message: messageError))
            }
        default:
            break
        }
    }
    
    private func friendCellViewModel(from friend: FriendItem) -> FriendViewModel.Cell {
        let friendCellViewModel = FriendViewModel.Cell.init(canWriteMessage: friend.canWritePrivateMessage, lastSeen: friend.onlineInfo?.lastSeen ?? 0, onlinePlatform: Platforms.getPlatform(by: friend.onlineInfo?.appId ?? 0).rawValue, id: friend.id, firstName: friend.firstName, lastName: friend.lastName, isClosed: friend.isClosed, isOnline: friend.onlineInfo?.isOnline, isMobile: friend.onlineInfo?.isMobile, photo100: friend.photo100, school: friend.schools?[0].name, homeTown: friend.homeTown)
        return friendCellViewModel
    }

    func onTapFriend(from userId: Int) {
        router.openProfile(from: userId)
    }
}
