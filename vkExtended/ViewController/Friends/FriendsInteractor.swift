//
//  FriendsInteractor.swift
//  vkExtended
//
//  Created Ярослав Стрельников on 26.10.2020.
//  Copyright © 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Alamofire
import SwiftyJSON

class FriendsInteractor: FriendsInteractorProtocol {
    weak var presenter: FriendsPresenterProtocol?
    
    func start(request: FriendModel.Request.RequestType) {
        makeRequest(request: request)
    }
       
    func makeRequest(request: FriendModel.Request.RequestType) {
        let parameters: Alamofire.Parameters = [Parameter.fields.rawValue: Constants.userFields, Parameter.order.rawValue: "hints", Parameter.userId.rawValue: Constants.currentUserId, Parameter.count.rawValue: 200]
        switch request {
        case .getFriend:
            presenter?.presentData(response: .presentFooterLoader)
            Request.dataRequest(method: ApiMethod.method(from: .friends, with: ApiMethod.Friends.get), parameters: parameters).done { [weak self] response in
                guard let self = self else { return }
                switch response {
                case .success(let data):
                    if let decoded = decodeJSON(type: FriendResponse.self, from: data) {
                        self.presenter?.presentData(response: .presentFriend(response: decoded))
                    } else {
                        self.presenter?.presentData(response: .presentFooterError(message: "Ошибка парсинга данных"))
                    }
                case .error(let error):
                    self.presenter?.presentData(response: .presentFooterError(message: error.toVK().localizedDescription))
                }
            }.catch { error in
                self.presenter?.presentData(response: .presentFooterError(message: error.localizedDescription))
            }
        default:
            break
        }
    }
}
