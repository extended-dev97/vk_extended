//
//  AudioInteractor.swift
//  vkExtended
//
//  Created Ярослав Стрельников on 15.11.2020.
//  Copyright © 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import PromiseKit
import Alamofire
import SwiftyJSON

class AudioInteractor: AudioInteractorProtocol {

    weak var presenter: AudioPresenterProtocol?
    
    func getAudio() {
        let parameters: Alamofire.Parameters = [
            Parameter.ownerId.rawValue: Constants.currentUserId,
            Parameter.count.rawValue: 200
        ]

        Request.dataRequest(method: ApiMethod.method(from: .audio, with: ApiMethod.Audio.get), parameters: parameters).done { (response) in
            switch response {
            case .success(let data):
                let audios = JSON(data)["items"].arrayValue.compactMap { AudioViewModel(audio: $0) }
                self.presenter?.onPresentAudio(audioViewModels: audios)
            case .error(let error):
                self.presenter?.onEvent(message: error.toApi()?.message ?? "", isError: true)
                print("Error code:", error.toApi()?.code ?? 0, "Error message:", error.toApi()?.message ?? "")
            }
        }.catch { (error) in
            self.presenter?.onEvent(message: error.localizedDescription, isError: true)
            print(error.localizedDescription)
        }
    }
}
